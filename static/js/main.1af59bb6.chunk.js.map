{"version":3,"sources":["components/NavBar.js","components/AddNewWords.js","components/EmptyListMessage.js","components/Quiz.js","components/ShowFullList.js","App.js","index.js"],"names":["NavBar","React","createElement","id","Link","to","AddNewWords","_ref","addPair","_useState","useState","_useState2","_slicedToArray","languageA","setLanguageA","_useState3","_useState4","languageB","setLanguageB","_useState5","_useState6","errorMessage","setErrorMessage","_useState7","_useState8","pairAdded","setPairAdded","autoComplete","className","type","value","onChange","e","target","onClick","source","EmptyListMessage","Quiz","pairs","removePair","Math","floor","random","length","randomIndex","setRandomIndex","userGuess","setUserGuess","isCorrect","setIsCorrect","handleRandomExpression","newIndex","console","log","checkGuess","preventDefault","resultClass","classNames","message","success","error","Fragment","undefined","onKeyDown","key","concat","pair","ShowFullList","map","index","handleRemovePair","App","setPairs","apiUrl","useEffect","fetch","then","response","json","data","catch","pairToRemove","updatedPairs","filter","method","headers","Content-Type","Router","Routes","Route","path","element","_toConsumableArray","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.1af59bb6.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/NavBar.css'\n\nconst NavBar = () => {\n  return (\n    <nav id=\"navbar\">\n      <ul id=\"navbar-list\">\n        <li>\n          <Link to=\"/add\">Add new words</Link>\n        </li>\n        <li>\n          <Link to=\"/quiz\">Quiz</Link>\n        </li>\n        <li>\n          <Link to=\"/list\">Show full list</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from 'react';\nimport '../styles/AddNewWords.css'\n\nconst AddNewWords = ({ addPair }) => {\n  const [languageA, setLanguageA] = useState('');\n  const [languageB, setLanguageB] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [pairAdded, setPairAdded] = useState(false);\n\n  const handleAddPair = () => {\n    if (languageA && languageB) {\n      const pair = { source: languageA, target: languageB };\n      addPair(pair);\n      setLanguageA('');\n      setLanguageB('');\n      setErrorMessage(''); // Clear the error message if both fields are filled\n      setPairAdded(true)\n    } else {\n      setPairAdded(false)\n      setErrorMessage('Please fill out both source and target languages.');\n    }\n  };\n\n  return (\n    <div id=\"add-new\">\n      <h4>Add new words to your list</h4>\n      <form autoComplete=\"off\" className='form-add-new'>\n        <label>\n        Source language:\n          <input type=\"text\" id=\"new-input-source\" value={languageA} onChange={(e) => setLanguageA(e.target.value)} />\n        </label>\n      </form>\n      <form autoComplete=\"off\" className='form-add-new'>\n        <label>\n        Target language:\n          <input type=\"text\" id=\"new-input-target\" value={languageB} onChange={(e) => setLanguageB(e.target.value)} />\n        </label>\n      </form>\n      <button id=\"add-new-button\" onClick={handleAddPair}>Add words</button>\n      <div className=\"conditional-content\">\n        {pairAdded && <p className=\"message success\">New pair added.</p>}\n        {errorMessage && <p className=\"message error\">{errorMessage}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default AddNewWords;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst EmptyListMessage = () => {\n  return (\n    <p>\n      Your list is empty. Add new language pairs in the{' '}\n      <b>\n        <Link to=\"/add\">Add new words</Link>\n      </b>{' '}\n      page.\n    </p>\n  );\n};\n\nexport default EmptyListMessage;\n","import React, { useState } from 'react';\nimport '../styles/Quiz.css'\nimport EmptyListMessage from './EmptyListMessage.js';\nimport classNames from 'classnames';\n\nconst Quiz = ({ pairs, removePair }) => {\n  const [randomIndex, setRandomIndex] = useState(Math.floor(Math.random() * pairs.length));\n  const [userGuess, setUserGuess] = useState('');\n  const [isCorrect, setIsCorrect] = useState(null);\n\n  const handleRandomExpression = () => {\n    const newIndex = Math.floor(Math.random() * pairs.length);\n    setRandomIndex(newIndex);\n    console.log('new index: ' + newIndex)\n    setUserGuess('');\n    console.log('user guess: ' + userGuess)\n    setIsCorrect(null);\n  };\n\nconst checkGuess = (e) => {\n  if (pairs.length === 0) {\n    return\n  }\n  e.preventDefault()\n    if (pairs[randomIndex].source === userGuess) {\n      setIsCorrect(true);\n    } else {\n      setIsCorrect(false);\n    }\n  };\n\n  const handleKeys = (e) => {\n    if (e.key === 'Enter') {\n      checkGuess(e)\n    }\n  }\n\n  const handleRemovePair = (pair) => {\n    removePair(pair);\n    handleRandomExpression()\n  };\n\n  const resultClass = classNames({\n    'message': true,\n    'success': isCorrect,\n    'error': !isCorrect\n  })\n\n  return (\n    <div id=\"quiz\">\n      {pairs.length === 0 && (<EmptyListMessage />)}\n      {pairs.length > 0 && (\n        <>\n          <button id=\"show-random-button\" onClick={handleRandomExpression}>Show new word</button>\n          <div className=\"conditional-content\">\n            {pairs[randomIndex] !== undefined && (<p id=\"random-word\">{pairs[randomIndex].target}</p>)}\n          </div>\n          <form autoComplete=\"off\">\n            <label>\n              Enter your quess:\n              <input \n              type=\"text\" \n              id=\"guess-input\" \n              value={userGuess} \n              onChange={(e) => setUserGuess(e.target.value)} \n              onKeyDown={handleKeys} />\n            </label>\n          <button id=\"guess-button\" onClick={checkGuess}>Guess</button>\n          </form>\n      <div className=\"conditional-content\">\n      {isCorrect !== null && (\n        <>\n          <p className={resultClass} id=\"result\">\n            {isCorrect\n              ? 'Correct!'\n              : `Incorrect. The correct answer is: ${pairs[randomIndex].source}`}\n          </p>\n          {isCorrect\n            ? <button id=\"delete-button\" onClick={() => handleRemovePair(pairs[randomIndex])}>Remove from list</button>\n            : null\n          }\n        </>\n        )}\n        </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Quiz;\n","import React from 'react';\nimport '../styles/ShowFullList.css'\nimport EmptyListMessage from './EmptyListMessage.js'\n\nconst ShowFullList = ({ pairs, removePair }) => {\n  const handleRemovePair = (pair) => {\n    removePair(pair);\n  };\n\n  return (\n    <div>\n      <ul id='full-list'>\n        {pairs.length === 0 && (<EmptyListMessage />)}\n        {pairs.map((pair, index,) => (\n          <div key={index} id=\"fulllist-item\">\n            <li key={index}>\n              {pair.source} - {pair.target}\n            </li>\n            <button \n              id=\"delete-from-list-button\"\n              onClick={() => handleRemovePair(pair)}\n            >\n              X</button>\n          </div>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ShowFullList;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport AddNewWords from './components/AddNewWords';\nimport Quiz from './components/Quiz';\nimport ShowFullList from './components/ShowFullList';\n\nfunction App() {\n  const [pairs, setPairs] = useState([]);\n  const apiUrl = 'http://dictservice.eba-2nd6frjp.eu-north-1.elasticbeanstalk.com';\n\n  useEffect(() => {\n    // Load language pairs from the backend server when the component mounts\n    fetch(`${apiUrl}/list`)\n      .then((response) => response.json())\n      .then((data) => setPairs(data))\n      .catch((error) => console.error('Error loading language pairs:', error));\n  }, []);\n\n  const addPair = (pair) => {\n    // Send a POST request to the backend server to add a new language pair\n    fetch(`${apiUrl}/add/${pair.source}/${pair.target}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setPairs([...pairs, data[0]]);\n        console.log(data)\n      })\n      .catch((error) => console.error('Error adding language pair:', error));\n  };\n\n  const removePair = (pairToRemove) => {\n    // Filter the pairs to remove the selected pair\n    const updatedPairs = pairs.filter((pair) => pair !== pairToRemove);\n    setPairs(updatedPairs);\n\n    fetch(`${apiUrl}/delete/${pairToRemove.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then((response) => response.json())\n      .catch((error) => console.error('Error deleting language pair:', error));\n  };\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <NavBar />\n      <div className=\"content\">\n          <Routes>\n            <Route path=\"/add\" element={<AddNewWords addPair={addPair} />} />\n            <Route path=\"/quiz\" element={<Quiz pairs={pairs} removePair={removePair} />} />\n            <Route path=\"/list\" element={<ShowFullList pairs={pairs} removePair={removePair} />} />\n          </Routes>\n        </div>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}